// Copyright (c) Microsoft. All rights reserved.

@import 'styles/themes';
@import 'styles/mixins';
@import 'styles/variables';
@import "../../../../node_modules/react-select/scss/select";
@import "../../../../node_modules/react-select/scss/mixins";
@import "../../../../node_modules/react-select/scss/spinner";

//
// Control
// ------------------------------


.Select {
	position: relative;

	// preferred box model
	&,
	& div,
	& input,
	& span {
		@include box-sizing(border-box);
	}

  &.select-long {
    @include rem-fallback(width, 248px);
  }

  &.select-short {
    @include rem-fallback(width, 124px);
  }

	// handle disabled state
	&.is-disabled > .Select-control {
		background-color: $select-input-bg-disabled;
		&:hover {
			box-shadow: none;
		}
	}
	&.is-disabled .Select-arrow-zone {
		cursor: default;
		pointer-events: none;
	}
}

// base

.Select-control {
  @include themify($themes) {
    background-color: themed('bgColor');
  	border-color: lighten(themed('selectBorderColor'), 5%) themed('selectBorderColor') darken(themed('selectBorderColor'), 10%);
  	border: 1px solid themed('selectBorderColor');
  	color: themed('bright');
  }

	cursor: default;
	display: table;
	border-spacing: 0;
	border-collapse: separate;
  @include rem-fallback(height, 26px);
	outline: none;
	overflow: hidden;
	position: relative;
	width: 100%;

	&:hover {
		box-shadow: $select-input-hover-box-shadow;
	}

	.Select-input:focus {
		outline: none;
	}
}

.is-searchable {
	&.is-open > .Select-control {
		cursor: text;
	}
}

.is-open > .Select-control {
	@include border-bottom-radius( 0 );
  @include themify($themes) {
    background: themed('bgColor');
    border-color: lighten(themed('selectBorderColor'), 10%) themed('selectBorderColor') darken(themed('selectBorderColor'), 5%);
  }

	// flip the arrow so its pointing up when the menu is open
	.Select-arrow {
		top: -2px;
		border-color: transparent transparent $select-arrow-color;
		border-width: 0 $select-arrow-width $select-arrow-width;
	}
}

.is-searchable {
	&.is-focused:not(.is-open) > .Select-control {
		cursor: text;
	}
}

.is-focused:not(.is-open) > .Select-control {
  @include themify($themes) {
    border-color: themed('selectBorderColor') lighten(themed('selectBorderColor'), 5%) lighten(themed('selectBorderColor'), 5%);
  }
  box-shadow: $select-input-box-shadow-focus;
}

// placeholder
.Select-placeholder,
.Select--single > .Select-control .Select-value {
	bottom: 0;
	color: $select-input-placeholder;
	left: 0;
  @include rem-fallback(line-height, 24px);
	padding-left: $select-padding-horizontal;
	padding-right: $select-padding-horizontal;
	position: absolute;
	right: 0;
	top: 0;

	// crop text
	max-width: 100%;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

.has-value.is-clearable.Select--single > .Select-control .Select-value {
	padding-right: ($select-clear-width + $select-arrow-width * 5);
}

.has-value.Select--single > .Select-control .Select-value,
.has-value.is-pseudo-focused.Select--single > .Select-control .Select-value {
	.Select-value-label {
    @include rem-font-size($selectFontSize);
    @include themify($themes) {
      color: themed('bright');
    }
	}
	a.Select-value-label {
		cursor: pointer;
		text-decoration: none;

		&:hover,
		&:focus {
      @include themify($themes) {
        color: themed('selectBorderColor');
      }
			outline: none;
			text-decoration: underline;
		}
	}
}


// the <input> element users type in

.Select-input {
	// inherits `display: inline-block` from "react-input-autosize"
	@include rem-fallback(height, 24px);
	padding-left: $select-padding-horizontal;
	padding-right: $select-padding-horizontal;
	vertical-align: middle;

	> input {
		background: none transparent;
		border: 0 none;
		box-shadow: none;
    @include themify($themes) {
      color: themed('bright');
    }
		cursor: default;
		display: inline-block;
		font-family: inherit;
		font-size: inherit;
		margin: 0;
		outline: none;
		line-height: 14px;  /* For IE 8 compatibility */
		padding: 3 0 7;  /* For IE 8 compatibility */
		-webkit-appearance: none;

		.is-focused & {
			cursor: text;
		}
	}

}

// fake-hide the input when the control is pseudo-focused
.has-value.is-pseudo-focused .Select-input {
	opacity: 0;
}

// fake input
.Select-control:not(.is-searchable) > .Select-input {
	outline: none;
}

// loading indicator
.Select-loading-zone {
	cursor: pointer;
	display: table-cell;
	position: relative;
	text-align: center;
	vertical-align: middle;
	width: $select-loading-size;
}
.Select-loading {
	@include Select-spinner($select-loading-size, $select-loading-color-bg, $select-loading-color);
	vertical-align: middle;
}


// the little cross that clears the field

.Select-clear-zone {
	@include animation( Select-animation-fadeIn 200ms );
	color: $select-clear-color;
	cursor: pointer;
	display: table-cell;
	position: relative;
	text-align: center;
	vertical-align: middle;
	width: $select-clear-width;

	&:hover {
		color: $select-clear-hover-color;
	}
}
.Select-clear {
	display: inline-block;
	font-size: $select-clear-size;
	line-height: 1;
}
.Select--multi .Select-clear-zone {
	width: $select-clear-width;
}

.Select--multi .Select-multi-value-wrapper {
  display: inline-block;
}
.Select .Select-aria-only {
	display: inline-block;
	height: 1px;
	width: 1px;
	margin: -1px;
	clip: rect(0,0,0,0);
	overflow: hidden;
	float: left;
}


// arrow indicator

.Select-arrow-zone {
	cursor: pointer;
	display: table-cell;
	position: relative;
	text-align: center;
	vertical-align: middle;
	width: ($select-arrow-width * 5);
	padding-right: $select-arrow-width;
}

.Select-arrow {
	border-color: $select-arrow-color transparent transparent;
	border-style: solid;
	border-width: $select-arrow-width $select-arrow-width ($select-arrow-width / 2);
	display: inline-block;
	height: 0;
	width: 0;
	position: relative;
}
.is-open .Select-arrow,
.Select-arrow-zone:hover > .Select-arrow {
	border-top-color: $select-arrow-color-hover;
}




// Animation
// ------------------------------

// fade in

@-webkit-keyframes Select-animation-fadeIn {
	from { opacity: 0; }
	to { opacity: 1; }
}
@keyframes Select-animation-fadeIn {
	from { opacity: 0; }
	to { opacity: 1; }
}

//
// Select Menu
// ------------------------------


// wrapper around the menu

.Select-menu-outer {
	// Unfortunately, having both border-radius and allows scrolling using overflow defined on the same
	// element forces the browser to repaint on scroll.  However, if these definitions are split into an
	// outer and an inner element, the browser is able to optimize the scrolling behavior and does not
	// have to repaint on scroll.
  @include rem-font-size($selectFontSize);
  @include themify($themes) {
    background-color: themed('bgColor');
    border: 1px solid themed('selectBorderColor');
    border-top-color: mix(themed('bgColor'), themed('selectBorderColor'), 50%);
  }
	box-shadow: $select-menu-box-shadow;
	box-sizing: border-box;
	margin-top: -1px;
	max-height: $select-menu-max-height;
	position: absolute;
	top: 100%;
	width: 100%;
	z-index: $select-menu-zindex;
	-webkit-overflow-scrolling: touch;
}


// wrapper

.Select-menu {
	max-height: ($select-menu-max-height - 2px);
	overflow-y: auto;
}


// options

.Select-option {
	box-sizing: border-box;
  cursor: pointer;
  display: block;
  padding: $select-padding-vertical $select-padding-horizontal;
  @include themify($themes) {
    background-color: themed('bgColor');
  	color: lighten(themed('bright'), 20%);

  	&:last-child {
  		@include border-bottom-radius( $select-input-border-radius );
  	}

  	&.is-selected {
  		background-color: themed('navBgColor');
  		color: themed('bright');
  	}

  	&.is-focused {
  		background-color: themed('hoverIconDarkGray');
  		color: themed('bright');
  	}

  	&.is-disabled {
  		color: themed('selectDisabledColor');
  		cursor: default;
  	}
  }
}


// no results

.Select-noresults {
	box-sizing: border-box;
	color: $select-noresults-color;
	cursor: default;
	display: block;
	padding: $select-padding-vertical $select-padding-horizontal;
}


//
// Multi-Select
// ------------------------------


// Base

.Select--multi {

	// add margin to the input element
	.Select-input {
		vertical-align: middle;
		// border: 1px solid transparent;
		margin-left: $select-padding-horizontal;
		padding: 0;
	}

	// reduce margin once there is value
	&.has-value .Select-input {
		margin-left: $select-item-gutter;
	}

	// Items
	.Select-value {
    display: inline-block;
    margin-left: $select-item-gutter;
    margin-top: $select-item-gutter;
    vertical-align: top;
    @include rem-font-size($selectFontSize);
    @include themify($themes) {
  		background-color: themed('bgColor');
  		border: 1px solid themed('selectBorderColor');
  		color: themed('bright');
    }
	}

	// common
	.Select-value-icon,
	.Select-value-label {
		display: inline-block;
		vertical-align: middle;
	}

	// label
	.Select-value-label {
		@include border-right-radius( $select-item-border-radius );
		cursor: default;
		padding: $select-item-padding-vertical $select-item-padding-horizontal;
	}
	a.Select-value-label {
    @include themify($themes) {
  		color: themed('bright');
    }
		cursor: pointer;
		text-decoration: none;

		&:hover {
			text-decoration: underline;
		}
	}

	// icon
	.Select-value-icon {
		cursor: pointer;
		@include border-left-radius( $select-item-border-radius );

		// move the baseline up by 1px
		padding: ($select-item-padding-vertical - 1) $select-item-padding-horizontal ($select-item-padding-vertical + 1);

    @include themify($themes) {
      border-right: 1px solid themed('selectBorderColor');

  		&:hover,
  		&:focus {
  			background-color: themed('hoverIconDarkGray');
  			color: themed('bright');
  		}
  		&:active {
  			background-color: themed('selectBorderColor');
  		}
    }
	}

}

.Select--multi.is-disabled {
  @include themify($themes) {
  	.Select-value {
  		background-color: themed('bgColor');
  		border: 1px solid themed('selectBorderColor');
  		color: themed('selectDisabledColor');
  	}
  	// icon
  	.Select-value-icon {
  		cursor: not-allowed;
  		border-right: 1px solid darken(themed('selectBorderColor'), 10%);

  		&:hover,
  		&:focus,
  		&:active {
  			background-color: themed('bgColor');
  		}
  	}
  }
}
