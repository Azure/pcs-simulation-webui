// Copyright (c) Microsoft. All rights reserved.

@import 'styles/themes';
@import 'styles/mixins';

.form-section {
  @include rem-fallback(padding-top, 32px);
  
  .section-header {
    @include rem-fallback(margin-bottom, 12px);

    @include themify($themes) {
      color: themed('bright');
    }
  }

  .section-desc {
    @include rem-font-size(14px);
    @include rem-fallback(margin-bottom, 16px);
  }
}

.form-group {
  @include rem-font-size(14px);

  .form-group-label {
    display: block;
    @include rem-fallback(margin-bottom, 12px);

    @include themify($themes) {
      color: themed('bright');
    }
  }

  + .form-group { @include rem-fallback(margin-top, 16px); }
}

.form-actions-container {
  @include rem-fallback(margin-top, 48px);
  @include rem-fallback(padding-top, 48px);

  @include themify($themes) {
    border-top: 1px solid themed('headerBorderColor');
  }
}

$btnHeight: 28px;
$btnIconSize: 14px;
.btn {
  display: flex;
  flex-flow: row nowrap;
  flex-shrink: 0;
  align-items: center;
  background-color: transparent;
  border: none;
  cursor: pointer;
  @include rem-fallback(padding, 0px, $btnHeight);

  .btn-icon {
    @include rem-fallback(height, $btnHeight);
    @include rem-fallback(width, $btnIconSize);
    
    svg { @include square-px-rem($btnIconSize); }

    + .btn-text { 
      @include rem-fallback(padding-left, 5px); 
    }
  }

  .btn-text { 
    @include rem-fallback(line-height, $btnHeight);
    @include rem-fallback(padding-right, (($btnHeight - $btnIconSize) / 2));
    @include rem-font-size(14px);
  }

  @include themify($themes) {
    color: themed('bright');

    .btn-icon svg { fill: themed('bright'); }

    &:hover {
      color: themed('navHoverBgColor');
      background-color: themed('navItemColor');

      .btn-icon svg { fill: themed('navHoverBgColor'); }
    }
  }
}

.btn-toolbar {
  display: flex;
  flex-flow: row wrap;

  // TODO: Use some flexbox properties to avoid strange staggering when wrapped
  .btn + .btn {
    @include rem-fallback(margin-left, 20px);
  }
}

.duration-control-container {
  display: flex;
  flex-flow: row wrap;

  .form-group {

    .form-group-label { text-transform: uppercase; }

    input[type=text] {
      width: 1.2em;
      text-align: center;
    }
  }

  .duration-colon-icon {
    align-self: flex-end;
    @include rem-fallback(height, 24px);
    @include rem-fallback(width, 10px);

    svg {
      @include rem-fallback(height, 16px);
      @include rem-fallback(width, 2px);
    }
  }

  @include themify($themes) {
    .form-group .form-group-label { color: themed('navItemColor'); }

    .duration-colon-icon svg { fill: themed('scrollbarThumbColor'); }
  }
}

.radio-container {
  display: flex;
  flex-flow: row nowrap;
  
  + .radio-container { @include rem-fallback(margin-top, 12px); }

  .radio-input-container {
    @include rem-fallback(margin-left, 16px);

    > input[type=radio] { display: none; }

    .radio-icon {
      cursor: pointer;
      @include square-px-rem(16px);
      
      svg { @include square-px-rem(16px); }

      &.disabled { cursor: auto; }

      @include themify($themes) {
        // Apply special styles to the radio button svg
        svg {
          .outer-border { 
            stroke: themed('headerBorderColor'); 
            fill: none;
          }
          
          .inner-circle { fill: themed('bright'); }
        }

        &.disabled svg {
          .inner-circle,
          .outer-border { 
            stroke: themed('headerBorderColor'); 
            fill: themed('headerBorderColor'); 
          }
        }
      }
    }
  }

  .input-contents {
    display: flex;
    flex-flow: column nowrap;
    flex-grow: 1;
    @include rem-fallback(margin-left, 10px);

    > .form-group-label {
      @include rem-font-size(14px);
      // If there is div content after the label, adding some padding above it
      + div { @include rem-fallback(margin-top, 12px); }

      @include themify($themes) {
        color: themed('bright');
      }
    }

    > input[type=text],
    > input[type=number] { @include rem-font-size(14px); }
  }
}

input[type=text].form-control,
input[type=number].form-control,
textarea.form-control {
  font-size: inherit;
  background: transparent;
  @include rem-fallback(padding, 3px, 4px);
  @include rem-fallback(width, 300px); // Default input width
  
  &:disabled {
    -webkit-touch-callout: none;
      -webkit-user-select: none;
       -khtml-user-select: none;
         -moz-user-select: none;
          -ms-user-select: none;
              user-select: none;
  }

  @include themify($themes) {
    color: themed('navItemColor');
    border: 1px solid themed('headerBorderColor');

    &:disabled {
      background-color: themed('headerBorderColor');
      color: themed('headerBorderColor');

      &::-webkit-input-placeholder { color: themed('headerBorderColor'); }
      &::-moz-placeholder { color: themed('headerBorderColor'); }
      &:-ms-input-placeholder { color: themed('headerBorderColor'); }
      &:-moz-placeholder { color: themed('headerBorderColor'); }
    }
  }
}

textarea.form-control {
  resize: none;
  min-height: 1em;
  @include rem-fallback(height, 100px);
  @include rem-fallback(width, 380px);
}
